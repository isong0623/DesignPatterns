package com.dreaming.design.problem;

/**
 * 看起来很简单，是不是?幸亏这里只是示意，
 * 否则，你想想，在vote()方法中那么多判断，
 * 还有每个判断对应的功能处理都放在一起，是不是有点太杂乱了，那简直就是个大杂烩，
 * 如果把每个功能都完整地实现出来，那 vote()方法会很长的。
 * 一个问题是，如果现在要修改某种投票情况所对应的具体功能处理，那就需要在那个大杂烩中，找到相应的代码块，然后进行改动。
 *
 * 另外一个问题是，如果要添加新的功能，比如投票超过8次但不足10次的，
 * 给个机会，只是禁止登录和使用系统3天，如果再犯，才永久封掉账号，该怎么办呢﹖
 * 那就需要改动投票管理的源代码，在上面的if-else结构中再添加一个else if块进行处理。
 *
 * 不管哪一种情况，都是在一大堆的控制代码中找出需要的部分，然后进行修改，
 * 这不是个好方法。那么该如何实现才能做到:既能够很容易地给vote()方法添加新的功能，
 * 又能够很方便地修改已有的功能处理呢?
 */
public class Main {
    public static void main(String[] args) {

    }
}
